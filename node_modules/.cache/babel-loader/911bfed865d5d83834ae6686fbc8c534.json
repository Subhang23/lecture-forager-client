{"ast":null,"code":"var _jsxFileName = \"/home/ritwiz/Desktop/github.com/lecture-forager/client/src/pages/VideoPlayer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createRef } from \"react\";\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport VideoPlayerTab from \"../../components/VideoPlayerTab/test.js\";\nimport \"./index.css\";\nimport { SERVER_HOST } from '../../constants';\nimport transcript_data from \"./transcription.json\";\nimport TextTracks from \"../../components/TextTracks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VideoPlayer({\n  location: {\n    state\n  }\n}) {\n  _s();\n\n  const {\n    filename,\n    id,\n    title,\n    description,\n    keywords\n  } = state;\n  const [loadingOrError, setLoadingOrError] = useState(true);\n  console.log(filename, id, title, description);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [transcriptData, setTranscriptData] = useState([]);\n  const [text, setText] = useState('');\n  const [timer, setTimer] = useState(0);\n  let refToChild = /*#__PURE__*/createRef();\n  useEffect(() => {\n    const f = async () => {\n      const {\n        filename,\n        id\n      } = state;\n\n      try {\n        const response = await axios.get(`${SERVER_HOST}/video`, {\n          params: {\n            filename,\n            id\n          }\n        });\n        setLoadingOrError(true);\n        setText(response.data.text);\n        setTranscriptData(response.data.timestamps);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    f();\n  }, []);\n\n  function highlightText(currentTime) {\n    transcriptData.forEach((item, i) => {\n      if (item.start_time < currentTime || item.start_time > currentTime + 5) {\n        document.getElementsByClassName(i.toString() + \"_class_id\")[0].style.backgroundColor = \"white\";\n      } else {\n        document.getElementsByClassName(i.toString() + \"_class_id\")[0].style.backgroundColor = \"burlywood\";\n      }\n    });\n  }\n\n  useEffect(() => {\n    highlightText(timer);\n  }, [timer]);\n  setInterval(() => {\n    if (refToChild.current != null) {\n      const currentRef = refToChild.current.state.player.currentTime;\n      highlightText(currentRef);\n    }\n  }, 5000);\n\n  function changeStatus(currentTime, toChange) {\n    console.log(currentTime, toChange);\n\n    if (toChange) {\n      setIsPlaying(prevState => {\n        return !prevState;\n      });\n    }\n\n    setTimer(currentTime);\n  }\n\n  const searchWords = [\"the\", \"a\", \"an\", \"in\", \"at\", \"of\"];\n  const videoInformation = {\n    title: \"I suck\",\n    image: \"../../public/test.jpg\",\n    body: \"Lol lol lollolollolloolol  lolololololo\",\n    tags: [\"anime\", \"shonen\", \"heroes\"],\n    id: \"8\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video_player_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_player_tab\",\n      children: !loadingOrError && /*#__PURE__*/_jsxDEV(VideoPlayerTab, {\n        changeStatus: changeStatus,\n        ref: refToChild,\n        data: transcriptData,\n        videoInformation: {\n          title,\n          body: description,\n          tags: ke\n        },\n        keyword: searchWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text_tab\",\n      children: [!transcriptData.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gif_loader\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Circles\",\n          color: \"#00BFFF\",\n          height: 100,\n          width: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), transcriptData.length && /*#__PURE__*/_jsxDEV(TextTracks, {\n        data: transcriptData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoPlayer, \"LW5cm8Nvrovs0q5PJ/Eb3tQRm9I=\");\n\n_c = VideoPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"sources":["/home/ritwiz/Desktop/github.com/lecture-forager/client/src/pages/VideoPlayer/index.js"],"names":["React","useState","useEffect","createRef","axios","Loader","VideoPlayerTab","SERVER_HOST","transcript_data","TextTracks","VideoPlayer","location","state","filename","id","title","description","keywords","loadingOrError","setLoadingOrError","console","log","isPlaying","setIsPlaying","transcriptData","setTranscriptData","text","setText","timer","setTimer","refToChild","f","response","get","params","data","timestamps","err","highlightText","currentTime","forEach","item","i","start_time","document","getElementsByClassName","toString","style","backgroundColor","setInterval","current","currentRef","player","changeStatus","toChange","prevState","searchWords","videoInformation","image","body","tags","ke","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAO,aAAP;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA;AAAF;AAAZ,CAArB,EAA8C;AAAA;;AAC3D,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,EAAZ;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA,WAAvB;AAAoCC,IAAAA;AAApC,MAAiDL,KAAvD;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC,IAAD,CAApD;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsBC,EAAtB,EAA0BC,KAA1B,EAAiCC,WAAjC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACuB,cAAD,EAAiBC,iBAAjB,IAAsCxB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACyB,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC2B,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,CAAD,CAAlC;AAEA,MAAI6B,UAAU,gBAAG3B,SAAS,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,CAAC,GAAG,YAAY;AACpB,YAAM;AAAElB,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAmBF,KAAzB;;AACA,UAAI;AACF,cAAMoB,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,GAAN,CAAW,GAAE1B,WAAY,QAAzB,EAAkC;AACvD2B,UAAAA,MAAM,EAAE;AACNrB,YAAAA,QADM;AAENC,YAAAA;AAFM;AAD+C,SAAlC,CAAvB;AAMAK,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAQ,QAAAA,OAAO,CAACK,QAAQ,CAACG,IAAT,CAAcT,IAAf,CAAP;AACAD,QAAAA,iBAAiB,CAACO,QAAQ,CAACG,IAAT,CAAcC,UAAf,CAAjB;AACD,OAVD,CAWA,OAAOC,GAAP,EAAY;AACVjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACD;AACF,KAhBD;;AAkBAN,IAAAA,CAAC;AACF,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,WAASO,aAAT,CAAuBC,WAAvB,EAAoC;AAClCf,IAAAA,cAAc,CAACgB,OAAf,CAAuB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAClC,UAAID,IAAI,CAACE,UAAL,GAAkBJ,WAAlB,IAAiCE,IAAI,CAACE,UAAL,GAAkBJ,WAAW,GAAG,CAArE,EAAwE;AACtEK,QAAAA,QAAQ,CAACC,sBAAT,CACEH,CAAC,CAACI,QAAF,KAAe,WADjB,EAEE,CAFF,EAEKC,KAFL,CAEWC,eAFX,GAE6B,OAF7B;AAGD,OAJD,MAIO;AACLJ,QAAAA,QAAQ,CAACC,sBAAT,CACEH,CAAC,CAACI,QAAF,KAAe,WADjB,EAEE,CAFF,EAEKC,KAFL,CAEWC,eAFX,GAE6B,WAF7B;AAGD;AACF,KAVD;AAWD;;AAED9C,EAAAA,SAAS,CAAC,MAAM;AACdoC,IAAAA,aAAa,CAACV,KAAD,CAAb;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIAqB,EAAAA,WAAW,CAAC,MAAM;AAChB,QAAInB,UAAU,CAACoB,OAAX,IAAsB,IAA1B,EAAgC;AAC9B,YAAMC,UAAU,GAAGrB,UAAU,CAACoB,OAAX,CAAmBtC,KAAnB,CAAyBwC,MAAzB,CAAgCb,WAAnD;AACAD,MAAAA,aAAa,CAACa,UAAD,CAAb;AACD;AACF,GALU,EAKR,IALQ,CAAX;;AAOA,WAASE,YAAT,CAAsBd,WAAtB,EAAmCe,QAAnC,EAA6C;AAC3ClC,IAAAA,OAAO,CAACC,GAAR,CAAYkB,WAAZ,EAAyBe,QAAzB;;AACA,QAAIA,QAAJ,EAAc;AACZ/B,MAAAA,YAAY,CAAEgC,SAAD,IAAe;AAC1B,eAAO,CAACA,SAAR;AACD,OAFW,CAAZ;AAGD;;AACD1B,IAAAA,QAAQ,CAACU,WAAD,CAAR;AACD;;AAED,QAAMiB,WAAW,GAAG,CAAC,KAAD,EAAQ,GAAR,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAApB;AACA,QAAMC,gBAAgB,GAAG;AACvB1C,IAAAA,KAAK,EAAE,QADgB;AAEvB2C,IAAAA,KAAK,EAAE,uBAFgB;AAGvBC,IAAAA,IAAI,EAAE,yCAHiB;AAIvBC,IAAAA,IAAI,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,CAJiB;AAKvB9C,IAAAA,EAAE,EAAE;AALmB,GAAzB;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACG,CAACI,cAAD,iBAAmB,QAAC,cAAD;AAClB,QAAA,YAAY,EAAEmC,YADI;AAElB,QAAA,GAAG,EAAEvB,UAFa;AAGlB,QAAA,IAAI,EAAEN,cAHY;AAIlB,QAAA,gBAAgB,EAAE;AAChBT,UAAAA,KADgB;AAEhB4C,UAAAA,IAAI,EAAE3C,WAFU;AAGhB4C,UAAAA,IAAI,EAAEC;AAHU,SAJA;AASlB,QAAA,OAAO,EAAEL;AATS;AAAA;AAAA;AAAA;AAAA;AADtB;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,iBACG,CAAChC,cAAc,CAACsC,MAAhB,iBACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,KAAK,EAAC,SAA7B;AAAuC,UAAA,MAAM,EAAE,GAA/C;AAAoD,UAAA,KAAK,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMGtC,cAAc,CAACsC,MAAf,iBAAyB,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEtC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAN5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAtGuBd,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport VideoPlayerTab from \"../../components/VideoPlayerTab/test.js\";\nimport \"./index.css\";\nimport { SERVER_HOST } from '../../constants';\n\nimport transcript_data from \"./transcription.json\";\nimport TextTracks from \"../../components/TextTracks\";\n\nexport default function VideoPlayer({ location: { state } }) {\n  const { filename, id, title, description, keywords } = state;\n  const [loadingOrError, setLoadingOrError] = useState(true);\n  console.log(filename, id, title, description);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [transcriptData, setTranscriptData] = useState([]);\n  const [text, setText] = useState('');\n  const [timer, setTimer] = useState(0);\n\n  let refToChild = createRef();\n\n  useEffect(() => {\n    const f = async () => {\n      const { filename, id } = state;\n      try {\n        const response = await axios.get(`${SERVER_HOST}/video`, {\n          params: {\n            filename,\n            id\n          }\n        });\n        setLoadingOrError(true);\n        setText(response.data.text);\n        setTranscriptData(response.data.timestamps);\n      }\n      catch (err) {\n        console.log(err);\n      }\n    }\n\n    f();\n  }, []);\n\n  function highlightText(currentTime) {\n    transcriptData.forEach((item, i) => {\n      if (item.start_time < currentTime || item.start_time > currentTime + 5) {\n        document.getElementsByClassName(\n          i.toString() + \"_class_id\"\n        )[0].style.backgroundColor = \"white\";\n      } else {\n        document.getElementsByClassName(\n          i.toString() + \"_class_id\"\n        )[0].style.backgroundColor = \"burlywood\";\n      }\n    });\n  }\n\n  useEffect(() => {\n    highlightText(timer);\n  }, [timer]);\n\n  setInterval(() => {\n    if (refToChild.current != null) {\n      const currentRef = refToChild.current.state.player.currentTime;\n      highlightText(currentRef);\n    }\n  }, 5000);\n\n  function changeStatus(currentTime, toChange) {\n    console.log(currentTime, toChange);\n    if (toChange) {\n      setIsPlaying((prevState) => {\n        return !prevState;\n      });\n    }\n    setTimer(currentTime);\n  }\n\n  const searchWords = [\"the\", \"a\", \"an\", \"in\", \"at\", \"of\"];\n  const videoInformation = {\n    title: \"I suck\",\n    image: \"../../public/test.jpg\",\n    body: \"Lol lol lollolollolloolol  lolololololo\",\n    tags: [\"anime\", \"shonen\", \"heroes\"],\n    id: \"8\",\n  };\n\n  return (\n    <div className=\"video_player_box\">\n      <div className=\"video_player_tab\">\n        {!loadingOrError && <VideoPlayerTab\n          changeStatus={changeStatus}\n          ref={refToChild}\n          data={transcriptData}\n          videoInformation={{\n            title,\n            body: description,\n            tags: ke\n          }}\n          keyword={searchWords}\n        /> }\n      </div>\n      <div className=\"text_tab\">\n        {!transcriptData.length && (\n          <div className=\"gif_loader\">\n            <Loader type=\"Circles\" color=\"#00BFFF\" height={100} width={100} />\n          </div>\n        )}\n        {transcriptData.length && <TextTracks data={transcriptData} />}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}