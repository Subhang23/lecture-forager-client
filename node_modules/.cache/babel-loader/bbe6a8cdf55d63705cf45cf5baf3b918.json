{"ast":null,"code":"var _jsxFileName = \"/home/ritwiz/Desktop/github.com/lecture-forager/client/src/pages/VideoList/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport VideoItem from '../VideoItem';\nimport axios from 'axios';\nimport { NotificationManager } from 'react-notifications';\nimport { SERVER_HOST } from '../../constants';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Videos({\n  data\n}) {\n  const videoItems = data.map(item => {\n    return /*#__PURE__*/_jsxDEV(VideoItem, {\n      videoMeta: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video_list\",\n    children: videoItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Videos;\nexport default function VideoList({\n  searchTerm\n}) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [videoList, setVideoList] = useState([]);\n  useEffect(() => {\n    const f = async () => {\n      try {\n        const response = await axios.get(`${SERVER_HOST}/video/multiple`, {\n          params: {\n            search: searchTerm\n          }\n        });\n        setVideoList(response.data.videos);\n        setLoaded(true);\n      } catch (err) {\n        const errorMessage = err.message ? err.message : err;\n        return NotificationManager.error(errorMessage);\n      }\n    };\n\n    f();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gif_loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Circles\",\n        color: \"#00BFFF\",\n        height: 100,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this), loaded && /*#__PURE__*/_jsxDEV(Videos, {\n      data: videoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoList, \"fw1lloWjfO0CjrkGPjs/KNCx7kI=\");\n\n_c2 = VideoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Videos\");\n$RefreshReg$(_c2, \"VideoList\");","map":{"version":3,"sources":["/home/ritwiz/Desktop/github.com/lecture-forager/client/src/pages/VideoList/index.js"],"names":["React","useEffect","useState","Loader","VideoItem","axios","NotificationManager","SERVER_HOST","Videos","data","videoItems","map","item","id","VideoList","searchTerm","loaded","setLoaded","videoList","setVideoList","f","response","get","params","search","videos","err","errorMessage","message","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAO,aAAP;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA0B;AACxB,QAAMC,UAAU,GAAGD,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAU;AACpC,wBAAO,QAAC,SAAD;AAAyB,MAAA,SAAS,EAAEA;AAApC,OAAgBA,IAAI,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFkB,CAAnB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAVQF,M;AAYT,eAAe,SAASM,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAmC;AAAA;;AAChD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,CAAC,GAAG,YAAY;AACpB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEf,WAAY,iBAAzB,EAA2C;AAChEgB,UAAAA,MAAM,EAAE;AACNC,YAAAA,MAAM,EAAET;AADF;AADwD,SAA3C,CAAvB;AAKAI,QAAAA,YAAY,CAACE,QAAQ,CAACZ,IAAT,CAAcgB,MAAf,CAAZ;AACAR,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OARD,CAQE,OAAOS,GAAP,EAAY;AACZ,cAAMC,YAAY,GAAGD,GAAG,CAACE,OAAJ,GAAcF,GAAG,CAACE,OAAlB,GAA4BF,GAAjD;AACA,eAAOpB,mBAAmB,CAACuB,KAApB,CAA0BF,YAA1B,CAAP;AACD;AACF,KAbD;;AAeAP,IAAAA,CAAC;AACF,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA,sBACE;AAAA,eACG,CAACJ,MAAD,iBAAW;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACV,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAC,SAA7B;AAAuC,QAAA,MAAM,EAAE,GAA/C;AAAoD,QAAA,KAAK,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA,YADd,EAIGA,MAAM,iBAAI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEE;AAAd;AAAA;AAAA;AAAA;AAAA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA7BuBJ,S;;MAAAA,S","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport VideoItem from '../VideoItem'\nimport axios from 'axios';\nimport { NotificationManager } from 'react-notifications';\nimport { SERVER_HOST } from '../../constants';\nimport './index.css';\n\nfunction Videos({ data }) {\n  const videoItems = data.map((item) => {\n    return <VideoItem key={item.id} videoMeta={item} />\n  });\n\n  return (\n    <div className=\"video_list\">\n      {videoItems}\n    </div>\n  );\n}\n\nexport default function VideoList({ searchTerm }) {\n  const [loaded, setLoaded] = useState(false);\n  const [videoList, setVideoList] = useState([]);\n  useEffect(() => {\n    const f = async () => {\n      try {\n        const response = await axios.get(`${SERVER_HOST}/video/multiple`, {\n          params: {\n            search: searchTerm\n          },\n        });\n        setVideoList(response.data.videos);\n        setLoaded(true);\n      } catch (err) {\n        const errorMessage = err.message ? err.message : err;\n        return NotificationManager.error(errorMessage);\n      }\n    }\n\n    f();\n  }, []);\n  return (\n    <div>\n      {!loaded && <div className=\"gif_loader\">\n        <Loader type=\"Circles\" color=\"#00BFFF\" height={100} width={100} />\n      </div>}\n      {loaded && <Videos data={videoList} />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}