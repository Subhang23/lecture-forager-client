{"ast":null,"code":"var _jsxFileName = \"/home/ritwiz/Desktop/github.com/lecture-forager/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport LandingPage from './pages/Landing';\nimport UploadPage from './pages/UploadPage';\nimport VideoList from './pages/VideoList';\nimport VideoPlayerTab from \"./components/VideoPlayerTab/test.js\";\nimport VideoPlayer from \"./pages/VideoPlayer\";\nimport { SERVER_HOST } from './constants';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { NotificationContainer } from 'react-notifications';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-notifications/lib/notifications.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchStarted, setSearchStarted] = useState(false);\n  const [videoList, setVideoList] = useState([]);\n\n  const searchTermChange = newSearchTerm => {\n    if (newSearchTerm.length === 0) setSearchStarted(false);\n    setSearchTerm(newSearchTerm);\n  };\n\n  const startSearch = async () => {\n    setSearchStarted(true);\n\n    try {\n      const response = await axios.get(`${SERVER_HOST}/video/multiple`, {\n        params: {\n          search: searchTerm\n        }\n      });\n      setVideoList(response.data.videos);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          minHeight: \"100vh\",\n          marginTop: \"80px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: LandingPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/upload\",\n            exact: true,\n            component: UploadPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/video\",\n            exact: true,\n            component: VideoList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/videoplayer\",\n            exact: true,\n            component: VideoPlayer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DOKOoSicT7kdi8OqhICxyIc3yug=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ritwiz/Desktop/github.com/lecture-forager/client/src/App.js"],"names":["Header","LandingPage","UploadPage","VideoList","VideoPlayerTab","VideoPlayer","SERVER_HOST","BrowserRouter","Router","Switch","Route","axios","useState","NotificationContainer","App","searchTerm","setSearchTerm","searchStarted","setSearchStarted","videoList","setVideoList","searchTermChange","newSearchTerm","length","startSearch","response","get","params","search","data","videos","err","console","log","minHeight","marginTop"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,OAAO,sCAAP;AACA,OAAO,2CAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMS,gBAAgB,GAAIC,aAAD,IAAmB;AAC1C,QAAIA,aAAa,CAACC,MAAd,KAAyB,CAA7B,EAAgCL,gBAAgB,CAAC,KAAD,CAAhB;AAChCF,IAAAA,aAAa,CAACM,aAAD,CAAb;AACD,GAHD;;AAIA,QAAME,WAAW,GAAG,YAAY;AAC9BN,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,QAAI;AACF,YAAMO,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,GAAEpB,WAAY,iBAAzB,EAA2C;AAChEqB,QAAAA,MAAM,EAAE;AACNC,UAAAA,MAAM,EAAEb;AADF;AADwD,OAA3C,CAAvB;AAKAK,MAAAA,YAAY,CAACK,QAAQ,CAACI,IAAT,CAAcC,MAAf,CAAZ;AACD,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AAEF,GAbD;;AAcA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,KAAK,EAAE;AACLG,UAAAA,SAAS,EAAE,OADN;AAELC,UAAAA,SAAS,EAAE;AAFN,SAFT;AAAA,+BAOE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,KAAK,MAArB;AAAsB,YAAA,SAAS,EAAElC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,SAAZ;AAAsB,YAAA,KAAK,MAA3B;AAA4B,YAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,MAA1B;AAA2B,YAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,cAAZ;AAA2B,YAAA,KAAK,MAAhC;AAAiC,YAAA,SAAS,EAAEE;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA3CD;;GAAMS,G;;KAAAA,G;AA6CN,eAAeA,GAAf","sourcesContent":["import Header from './components/Header';\nimport LandingPage from './pages/Landing';\nimport UploadPage from './pages/UploadPage';\nimport VideoList from './pages/VideoList';\nimport VideoPlayerTab from \"./components/VideoPlayerTab/test.js\";\nimport VideoPlayer from \"./pages/VideoPlayer\";\nimport { SERVER_HOST } from './constants';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { NotificationContainer } from 'react-notifications';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-notifications/lib/notifications.css';\n\nconst App = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchStarted, setSearchStarted] = useState(false);\n  const [videoList, setVideoList] = useState([]);\n  const searchTermChange = (newSearchTerm) => {\n    if (newSearchTerm.length === 0) setSearchStarted(false);\n    setSearchTerm(newSearchTerm);\n  }\n  const startSearch = async () => {\n    setSearchStarted(true);\n    try {\n      const response = await axios.get(`${SERVER_HOST}/video/multiple`, {\n        params: {\n          search: searchTerm\n        },\n      });\n      setVideoList(response.data.videos);\n    } catch (err) {\n      console.log(err);\n    }\n\n  }\n  return (\n    <Router>\n      <div>\n        <Header />\n        <div\n          className=\"container\"\n          style={{\n            minHeight: \"100vh\",\n            marginTop: \"80px\",\n          }}\n        >\n          <Switch>\n            <Route path=\"/\" exact component={LandingPage} />\n            <Route path=\"/upload\" exact component={UploadPage} />\n            <Route path=\"/video\" exact component={VideoList} />\n            <Route path=\"/videoplayer\" exact component={VideoPlayer} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}