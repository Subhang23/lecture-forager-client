{"ast":null,"code":"var _jsxFileName = \"/home/ritwiz/Desktop/github.com/lecture-forager/client/src/pages/VideoPlayer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createRef } from \"react\";\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport VideoPlayerTab from \"../../components/VideoPlayerTab/test.js\";\nimport \"./index.css\";\nimport transcript_data from \"./transcription.json\";\nimport TextTracks from \"../../components/TextTracks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction transform(data) {\n  let transformed_data = [],\n      count = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].hasOwnProperty(\"start_time\")) {\n      transformed_data.push({\n        start_time: data[i].start_time,\n        value: data[i].alternatives[0].content\n      });\n      count++;\n    } else {\n      if (count !== 0) {\n        transformed_data[count - 1].value += data[i].alternatives[0].content;\n      }\n    }\n  }\n\n  return transformed_data;\n}\n\nexport default function VideoPlayer() {\n  _s();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [transcriptData, setTranscriptData] = useState([]);\n  const [timer, setTimer] = useState(0);\n  let refToChild = /*#__PURE__*/createRef();\n  useEffect(() => {\n    const f = async () => {};\n\n    setTranscriptData([...transform(transcript_data.results.items)]);\n  }, []);\n\n  function highlightText(currentTime) {\n    transcriptData.forEach((item, i) => {\n      if (item.start_time < currentTime || item.start_time > currentTime + 5) {\n        document.getElementsByClassName(i.toString() + \"_class_id\")[0].style.backgroundColor = \"white\";\n      } else {\n        document.getElementsByClassName(i.toString() + \"_class_id\")[0].style.backgroundColor = \"burlywood\";\n      }\n    });\n  }\n\n  useEffect(() => {\n    highlightText(timer);\n  }, [timer]);\n  setInterval(() => {\n    if (refToChild.current != null) {\n      const currentRef = refToChild.current.state.player.currentTime;\n      highlightText(currentRef);\n    }\n  }, 5000);\n\n  function changeStatus(currentTime, toChange) {\n    console.log(currentTime, toChange);\n\n    if (toChange) {\n      setIsPlaying(prevState => {\n        return !prevState;\n      });\n    }\n\n    setTimer(currentTime);\n  }\n\n  const searchWords = [\"the\", \"a\", \"an\", \"in\", \"at\", \"of\"];\n  const videoInformation = {\n    title: \"I suck\",\n    image: \"../../public/test.jpg\",\n    body: \"Lol lol lollolollolloolol  lolololololo\",\n    tags: [\"anime\", \"shonen\", \"heroes\"],\n    id: \"8\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video_player_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_player_tab\",\n      children: /*#__PURE__*/_jsxDEV(VideoPlayerTab, {\n        changeStatus: changeStatus,\n        ref: refToChild,\n        data: transcriptData,\n        videoInformation: videoInformation,\n        keyword: searchWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text_tab\",\n      children: [!transcriptData.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gif_loader\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Circles\",\n          color: \"#00BFFF\",\n          height: 100,\n          width: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), transcriptData.length && /*#__PURE__*/_jsxDEV(TextTracks, {\n        data: transcriptData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VideoPlayer, \"/iuK117mpQMbizM+PDeNyPHNSgo=\");\n\n_c = VideoPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"sources":["/home/ritwiz/Desktop/github.com/lecture-forager/client/src/pages/VideoPlayer/index.js"],"names":["React","useState","useEffect","createRef","axios","Loader","VideoPlayerTab","transcript_data","TextTracks","transform","data","transformed_data","count","i","length","hasOwnProperty","push","start_time","value","alternatives","content","VideoPlayer","isPlaying","setIsPlaying","transcriptData","setTranscriptData","timer","setTimer","refToChild","f","results","items","highlightText","currentTime","forEach","item","document","getElementsByClassName","toString","style","backgroundColor","setInterval","current","currentRef","state","player","changeStatus","toChange","console","log","prevState","searchWords","videoInformation","title","image","body","tags","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\nimport axios from 'axios';\nimport Loader from \"react-loader-spinner\";\nimport VideoPlayerTab from \"../../components/VideoPlayerTab/test.js\";\nimport \"./index.css\";\n\nimport transcript_data from \"./transcription.json\";\nimport TextTracks from \"../../components/TextTracks\";\n\nfunction transform(data) {\n  let transformed_data = [],\n    count = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].hasOwnProperty(\"start_time\")) {\n      transformed_data.push({\n        start_time: data[i].start_time,\n        value: data[i].alternatives[0].content,\n      });\n      count++;\n    } else {\n      if (count !== 0) {\n        transformed_data[count - 1].value += data[i].alternatives[0].content;\n      }\n    }\n  }\n  return transformed_data;\n}\n\nexport default function VideoPlayer() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [transcriptData, setTranscriptData] = useState([]);\n  const [timer, setTimer] = useState(0);\n\n  let refToChild = createRef();\n\n  useEffect(() => {\n    const f = async () => {\n      \n    }\n    setTranscriptData([...transform(transcript_data.results.items)]);\n  }, []);\n\n  function highlightText(currentTime) {\n    transcriptData.forEach((item, i) => {\n      if (item.start_time < currentTime || item.start_time > currentTime + 5) {\n        document.getElementsByClassName(\n          i.toString() + \"_class_id\"\n        )[0].style.backgroundColor = \"white\";\n      } else {\n        document.getElementsByClassName(\n          i.toString() + \"_class_id\"\n        )[0].style.backgroundColor = \"burlywood\";\n      }\n    });\n  }\n\n  useEffect(() => {\n    highlightText(timer);\n  }, [timer]);\n\n  setInterval(() => {\n    if (refToChild.current != null) {\n      const currentRef = refToChild.current.state.player.currentTime;\n      highlightText(currentRef);\n    }\n  }, 5000);\n\n  function changeStatus(currentTime, toChange) {\n    console.log(currentTime, toChange);\n    if (toChange) {\n      setIsPlaying((prevState) => {\n        return !prevState;\n      });\n    }\n    setTimer(currentTime);\n  }\n\n  const searchWords = [\"the\", \"a\", \"an\", \"in\", \"at\", \"of\"];\n  const videoInformation = {\n    title: \"I suck\",\n    image: \"../../public/test.jpg\",\n    body: \"Lol lol lollolollolloolol  lolololololo\",\n    tags: [\"anime\", \"shonen\", \"heroes\"],\n    id: \"8\",\n  };\n\n  return (\n    <div className=\"video_player_box\">\n      <div className=\"video_player_tab\">\n        <VideoPlayerTab\n          changeStatus={changeStatus}\n          ref={refToChild}\n          data={transcriptData}\n          videoInformation={videoInformation}\n          keyword={searchWords}\n        />\n      </div>\n      <div className=\"text_tab\">\n        {!transcriptData.length && (\n          <div className=\"gif_loader\">\n            <Loader type=\"Circles\" color=\"#00BFFF\" height={100} width={100} />\n          </div>\n        )}\n        {transcriptData.length && <TextTracks data={transcriptData} />}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}