{"ast":null,"code":"var _jsxFileName = \"/home/ritwiz/Desktop/github.com/lecture-forager/client/src/pages/VideoItem/index.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Badge from 'react-bootstrap/Badge';\nimport { SERVER_HOST } from '../../constants';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tags(props) {\n  const tags = props.tags.split(',');\n  const tagList = tags.slice(0, Math.min(tags.length, 40)).map(tag => {\n    return /*#__PURE__*/_jsxDEV(Badge, {\n      pill: true,\n      variant: \"dark\",\n      children: tag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tagList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Tags;\nexport default function VideoItem({\n  videoMeta,\n  searchTerm\n}) {\n  console.log(\"Inside item video\", searchTerm);\n  const {\n    title,\n    description,\n    keywords,\n    filename\n  } = videoMeta;\n  const props = {\n    title,\n    description,\n    keywords,\n    filename\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: '/videoPlayer',\n          state: { ...videoMeta,\n            searchTerm\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${SERVER_HOST}/static/${filename.slice(0, filename.lastIndexOf('.'))}/tn.png`,\n          onError: () => {\n            this.src = './preloader.gif';\n          },\n          alt: \"\",\n          className: \"image_body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video_heading\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video_body\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video_tags\",\n        children: [/*#__PURE__*/_jsxDEV(Tags, {\n          tags: keywords !== null && keywords !== void 0 ? keywords : []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 45\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_c2 = VideoItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tags\");\n$RefreshReg$(_c2, \"VideoItem\");","map":{"version":3,"sources":["/home/ritwiz/Desktop/github.com/lecture-forager/client/src/pages/VideoItem/index.js"],"names":["React","Link","Badge","SERVER_HOST","Tags","props","tags","split","tagList","slice","Math","min","length","map","tag","VideoItem","videoMeta","searchTerm","console","log","title","description","keywords","filename","pathname","state","lastIndexOf","src"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAO,aAAP;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,GAAjB,CAAb;AACA,QAAMC,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,IAAI,CAACC,GAAL,CAASL,IAAI,CAACM,MAAd,EAAsB,EAAtB,CAAd,EAAyCC,GAAzC,CAA8CC,GAAD,IAAS;AAClE,wBAAO,QAAC,KAAD;AAAO,MAAA,IAAI,MAAX;AAAY,MAAA,OAAO,EAAC,MAApB;AAAA,gBACFA;AADE;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH,GAJe,CAAhB;AAKA,sBACI;AAAA,cAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;KAVQJ,I;AAYT,eAAe,SAASW,SAAT,CAAmB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAnB,EAA8C;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,UAAjC;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAA6CP,SAAnD;AACA,QAAMX,KAAK,GAAG;AACVe,IAAAA,KADU;AAEVC,IAAAA,WAFU;AAGVC,IAAAA,QAHU;AAIVC,IAAAA;AAJU,GAAd;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAI;AACRC,UAAAA,QAAQ,EAAE,cADF;AAERC,UAAAA,KAAK,EAAE,EACH,GAAGT,SADA;AAEHC,YAAAA;AAFG;AAFC,SAAZ;AAAA,+BAOI;AAAK,UAAA,GAAG,EAAG,GAAEd,WAAY,WAAUoB,QAAQ,CAACd,KAAT,CAAe,CAAf,EAAkBc,QAAQ,CAACG,WAAT,CAAqB,GAArB,CAAlB,CAA6C,SAAhF;AAA0F,UAAA,OAAO,EAAE,MAAM;AAAE,iBAAKC,GAAL,GAAW,iBAAX;AAA8B,WAAzI;AAA2I,UAAA,GAAG,EAAC,EAA/I;AAAkJ,UAAA,SAAS,EAAC;AAA5J;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAAgCP;AAAhC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA6BC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCAA4B,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEC,QAAF,aAAEA,QAAF,cAAEA,QAAF,GAAc;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;MA9BuBP,S","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Badge from 'react-bootstrap/Badge'\nimport { SERVER_HOST } from '../../constants';\nimport './index.css';\n\n\nfunction Tags(props) {\n    const tags = props.tags.split(',');\n    const tagList = tags.slice(0, Math.min(tags.length, 40)).map((tag) => {\n        return <Badge pill variant=\"dark\">\n            {tag}\n        </Badge>\n    });\n    return (\n        <div>{tagList}</div>\n    )\n}\n\nexport default function VideoItem({ videoMeta, searchTerm }) {\n    console.log(\"Inside item video\", searchTerm);\n    const { title, description, keywords, filename } = videoMeta;\n    const props = {\n        title,\n        description,\n        keywords,\n        filename\n    }\n    return (\n        <div className=\"video_box\" >\n            <div>\n                <Link to = {{\n                    pathname: '/videoPlayer',\n                    state: {\n                        ...videoMeta,\n                        searchTerm\n                    }\n                }}>\n                    <img src={`${SERVER_HOST}/static/${filename.slice(0, filename.lastIndexOf('.'))}/tn.png`} onError={() => { this.src = './preloader.gif' }} alt=\"\" className=\"image_body\" />\n                </Link>\n            </div>\n            <div className=\"video_content\">\n                <div className=\"video_heading\">{title}</div>\n                <div className=\"video_body\">{description}</div>\n                <div className=\"video_tags\"><Tags tags={keywords ?? []} /> </div>\n            </div>\n        </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}